-- Archivo creado  - DOM-NOV-23-2014   
CREATE DATABASE IF NOT EXISTS HISTPRE /*!40100 DEFAULT CHARACTER SET latin1 */;
USE HISTPRE;
--  DDL for Table INT_INFLUENCIA
CREATE TABLE INT_INFLUENCIA 
   (	ID_INFLUENCIA INT(3) PRIMARY KEY, 
	NN_NOMBRE_INFLUENCIA VARCHAR(35)
   );
--  DDL for Table INT_INTERESADO
CREATE TABLE INT_INTERESADO 
   (	PMO_PROYECTO INT, 
	PT_PERSONA VARCHAR(65), 
	INT_ROL INT, 
	INT_INFLUENCIA INT(3), 
	FH_ID_INTERESADO INT AUTO_INCREMENT PRIMARY KEY
   );
--  DDL for Table INT_ROL
CREATE TABLE INT_ROL 
   (	ID_ROL INT PRIMARY KEY, 
	NN_NOMBRE_ROL VARCHAR(35)
   );
--  DDL for Table LA_LECCION
CREATE TABLE LA_LECCION 
   (	ID_LECCION INT(20) PRIMARY KEY, 
	NN_NOMBRE_LECCION VARCHAR(35), 
	FH_CREACION_LECCION DATE, 
	PMO_PROYECTO INT, 
	LA_VALOR INT, 
	PMO_AREA INT, 
	NN_DESCRIPCION_LECCION VARCHAR(100), 
	TT_RECOMENDACIONES_LECCION VARCHAR(60)
   ); 
--  DDL for Table LA_VALOR
CREATE TABLE LA_VALOR 
   (	ID_VALOR INT(3) PRIMARY KEY, 
	NN_NOMBRE_VALOR VARCHAR(20)
   );
--  DDL for Table PMIS_GRAFICA
CREATE TABLE PMIS_GRAFICA
   (	ID_GRAFICA INT PRIMARY KEY, 
	NOMBRE_GRAFICA VARCHAR(20), 
	TITULO_GRAFICA VARCHAR(35), 
	TABLE_GRAFICA VARCHAR(55)
   );
--  DDL for Table PMIS_LOG
CREATE TABLE PMIS_LOG
   (	ID_LOG INT PRIMARY KEY, 
	NN_NOMBRE_LOG VARCHAR(55), 
	PS_CLAVE_LOG INT
   );
--  DDL for Table PMIS_MODULO
CREATE TABLE PMIS_MODULO
   (	NN_NOMBRE_MODULO VARCHAR(35), 
	TT_URL_MODULO VARCHAR(150), 
	ID_MODULO INT(3) PRIMARY KEY
   );
--  DDL for Table PMIS_SLIDE
CREATE TABLE PMIS_SLIDE
   (	ID_SLIDE INT PRIMARY KEY, 
	NOMBRE_SLIDE VARCHAR(20)
   );
--  DDL for Table PMIS_USO
CREATE TABLE PMIS_USO
   (	ID_USO INT AUTO_INCREMENT PRIMARY KEY, 
	FECHA_USO DATE, 
	CRITERIO_USO VARCHAR(35), 
	SQL_USO VARCHAR(100), 
	USUARIO_USO VARCHAR(65)
   );
--  DDL for Table PMO_AREA
CREATE TABLE PMO_AREA 
   (	ID_AREA INT PRIMARY KEY, 
	NOMBRE_AREA VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_COMPLEJIDAD
CREATE TABLE PMO_COMPLEJIDAD
   (	ID_COMPLEJIDAD INT PRIMARY KEY, 
	NOMBRE_COMPLEJIDAD VARCHAR(30), 
	ESTADO INT
   );
--  DDL for Table PMO_DIRECCION
CREATE TABLE PMO_DIRECCION
   (	ID INT PRIMARY KEY, 
	NOMBRE VARCHAR(20)
   );
--  DDL for Table PMO_DOCUMENTACION_PROYECTO
CREATE TABLE PMO_DOCUMENTACION_PROYECTO 
   (	ID_DOCUMENTACION_PROYECTO INT PRIMARY KEY, 
	NOMBRE_DOCUMENTO VARCHAR(50), 
	ESTADO INT, 
	FASE VARCHAR(100), 
	PROCESO VARCHAR(50), 
	REQUERIDO INT
   );
--  DDL for Table PMO_DURACION_TAREA
CREATE TABLE PMO_DURACION_TAREA 
   (	ID_PROYECTOS INT, 
	ID_TAREA INT, 
	FECHA_INICIO DATE, 
	FECHA_FINAL DATE, 
	ID_TAREA_NUEVA INT, 
	ID_DURACION_TAREA INT PRIMARY KEY
   );  
--  DDL for Table PMO_ESTADO_ALCANCE
CREATE TABLE PMO_ESTADO_ALCANCE
   (	ID_ESTADO_ALCANCE INT PRIMARY KEY, 
	NOMBRE_ESTADO_ALCANCE VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_ESTADO_DOCUMENTACION
CREATE TABLE PMO_ESTADO_DOCUMENTACION 
   (	ID_ESTADO_DOCUMENTACION INT PRIMARY KEY, 
	NOMBRE_ESTADO_DOCUMENTACION VARCHAR(20), 
	ESTADO INT
   );
--  DDL for Table PMO_ESTADO_PRIORIZACION
CREATE TABLE PMO_ESTADO_PRIORIZACION
   (	ID_ESTADO_PRIORIZACION INT PRIMARY KEY, 
	NOMBRE_ESTADO_PRIORIZACION VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_ESTADO_REGULATORIO
CREATE TABLE PMO_ESTADO_REGULATORIO 
   (	ID_ESTADO_REGULATORIO INT PRIMARY KEY, 
	NOMBRE_ESTADO_REGULATORIO VARCHAR(50), 
	ESTADO INT, 
	PESO INT
   );
--  DDL for Table PMO_ESTADO_VARIABLES
CREATE TABLE PMO_ESTADO_VARIABLES 
   (	ID_ESTADO_VARIABLES INT PRIMARY KEY, 
	NOMBRE_ESTADO_VARIABLES VARCHAR(50), 
	ESTADO INT, 
	PESO INT
   );
--  DDL for Table PMO_ESTIMACION_TRABAJO
CREATE TABLE PMO_ESTIMACION_TRABAJO 
   (	ID_ESTIMACION_TRABAJO INT PRIMARY KEY, 
	ID_TAREA INT, 
	ID_COMPLEJIDAD INT, 
	ID_TIPO_PROYECTO_MIC INT, 
	VALOR INT
   );
--  DDL for Table PMO_GEST_DEMAN_DETALLE100614
CREATE TABLE PMO_GEST_DEMAN_DETALLE100614
   (	PROYECTO_ID INT, 
	DIRECCION_ID INT, 
	STATUS_ VARCHAR(20), 
	REQ_HIJO VARCHAR(20), 
	FECHA_ENTREGA DATE, 
	NOTICIAS VARCHAR(500), 
	FECHA_UPDATE DATE
   );
--  DDL for Table PMO_GESTION_DEMANDA
CREATE TABLE PMO_GESTION_DEMANDA
   (	ID_PROYECTO INT PRIMARY KEY, 
	ESTADO_GENERAL VARCHAR(20), 
	NO_REQ_CCYB VARCHAR(50), 
	COMENTARIO_CCYB VARCHAR(200), 
	NO_REQ_PREPAGO VARCHAR(50), 
	COMENTARIO_PREPAGO VARCHAR(200), 
	NO_REQ_MIFRA VARCHAR(50), 
	COMENTARIO_MIFRA VARCHAR(200), 
	NO_REQ_DWH VARCHAR(50), 
	COMENTARIO_DWH VARCHAR(200), 
	NO_REQ_DIGITAL VARCHAR(50), 
	COMENTARIOS_DIGITAL VARCHAR(200), 
	NO_REQ_RED VARCHAR(20), 
	COMENTARIOS_RED VARCHAR(200), 
	NOMBRE VARCHAR(500), 
	FECHA_ENTREGA DATE, 
	PM_ID INT, 
	PMO_GD VARCHAR(20), 
	TIPO_ID INT, 
	PMGD INT, 
	COMENTARIOS_GD VARCHAR(1000), 
	NO_REQ_PADRE VARCHAR(150), 
	PRIORIZACION INT, 
	NUMERO_PRIORIZACION INT, 
	VISIBILIDAD VARCHAR(20), 
	FECHA_ASIGNACION DATE, 
	TIPO_FLUJO VARCHAR(20), 
	DESCRIPCION VARCHAR(255), 
	TUBO VARCHAR(20), 
	ARQUITECTO VARCHAR(50), 
	Q_INICIO_IMPLEMENTACION VARCHAR(20), 
	COM_IMPLEMTACION VARCHAR(500)
   );
--  DDL for Table PMO_GESTION_DEMANDA_DETALLE
CREATE TABLE PMO_GESTION_DEMANDA_DETALLE
   (	PROYECTO_ID INT PRIMARY KEY, 
	DIRECCION_ID INT UNIQUE KEY, 
	STATUS_ VARCHAR(20), 
	REQ_HIJO VARCHAR(20) UNIQUE KEY, 
	FECHA_ENTREGA DATE, 
	NOTICIAS VARCHAR(4000), 
	FECHA_UPDATE DATE, 
	FECHA_INICIO DATE, 
	FECHA_FIN DATE, 
	SPI FLOAT(126,0)
   );
--  DDL for Table PMO_GESTION_DEMANDA10062014
CREATE TABLE PMO_GESTION_DEMANDA10062014 
   (	ID_PROYECTO INT, 
	ESTADO_GENERAL VARCHAR(20), 
	NO_REQ_CCYB VARCHAR(20), 
	COMENTARIO_CCYB VARCHAR(200), 
	NO_REQ_PREPAGO VARCHAR(20), 
	COMENTARIO_PREPAGO VARCHAR(200), 
	NO_REQ_MIFRA VARCHAR(20), 
	COMENTARIO_MIFRA VARCHAR(200), 
	NO_REQ_DWH VARCHAR(20), 
	COMENTARIO_DWH VARCHAR(200), 
	NO_REQ_DIGITAL VARCHAR(20), 
	COMENTARIOS_DIGITAL VARCHAR(200), 
	NO_REQ_RED VARCHAR(20), 
	COMENTARIOS_RED VARCHAR(200), 
	NOMBRE VARCHAR(500), 
	NOTICIAS VARCHAR(500), 
	FECHA_ENTREGA DATE, 
	ESTADO VARCHAR(50), 
	PM_ID INT, 
	PMO_GD VARCHAR(20), 
	TIPO_ID INT, 
	PMGD INT, 
	COMENTARIOS_GD VARCHAR(1000), 
	NO_REQ_PADRE VARCHAR(150), 
	PRIORIZACION INT, 
	NUMERO_PRIORIZACION INT, 
	ID_VICEPRESIDENCIA INT, 
	ID_AREA INT
   );
--  DDL for Table PMO_GESTION_DOCUMENTACION
CREATE TABLE PMO_GESTION_DOCUMENTACION 
   (	ID_GESTION_DOCUMENTACION INT PRIMARY KEY, 
	ID_PROYECTOS INT, 
	ID_DOCUMENTACION_PROYECTO INT, 
	FECHA_INICIO DATE, 
	FECHA_CIERRE DATE,
	OBSERVACIONES VARCHAR(1000) DEFAULT 'SIN OBSERVACIONES', 
	ID_ESTADO INT DEFAULT 3, 
	ID_PROYECTOS_RELACION INT, 
	ID_PM INT DEFAULT NULL
   );
--  DDL for Table PMO_HISTORICO_PRIORIZACION
CREATE TABLE PMO_HISTORICO_PRIORIZACION
   (	ID_PROYECTOS INT, 
	PRIORIZACION INT, 
	NUMERO_PRIORIZACION INT, 
	FECHA_PRIORIZACION DATE
   ); 
--  DDL for Table PMO_OBJETIVOS_ESTRATEGICOS
CREATE TABLE PMO_OBJETIVOS_ESTRATEGICOS 
   (	ID_OBJETIVO_ESTRATEGICO INT PRIMARY KEY, 
	NOMBRE_OBJETIVO_ESTRATEGICO VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_PM
CREATE TABLE PMO_PM 
   (	ID_PM INT PRIMARY KEY, 
	NOMBRE_PM VARCHAR(50), 
	CORREO VARCHAR(50), 
	AREA VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_PRIORIZACION_TEMP
CREATE TABLE PMO_PRIORIZACION_TEMP 
   (	ID_PROYECTOS INT, 
	PRIORIZACION_ACTUAL INT, 
	NUMERO_PRIORIZACION INT, 
	FECHA_PRIORIZACION DATE, 
	NUEVA_PRIORIZACION INT, 
	PUNTAJE INT
   );
--  DDL for Table PMO_PRIORIZACION_TEMP_V1
CREATE TABLE PMO_PRIORIZACION_TEMP_V1
   (	ID_PROYECTOS INT, 
	PRIORIZACION_ACTUAL INT, 
	NUMERO_PRIORIZACION INT, 
	FECHA_PRIORIZACION DATE, 
	NUEVA_PRIORIZACION INT, 
	PUNTAJE INT
   );
--  DDL for Table PMO_TAREAS
CREATE TABLE PMO_TAREAS
   (	ID_TAREA INT AUTO_INCREMENT PRIMARY KEY, 
	NOMBRE_TAREA VARCHAR(50), 
	ESTADO INT, 
	FASE VARCHAR(100), 
	AVANCE INT, 
	PESO INT, 
	PORCENTAJE VARCHAR(5)
   );
--  DDL for Table PMO_TEST
CREATE TABLE PMO_TEST
   (	FECHA DATE, 
	ID INT PRIMARY KEY
   );
--  DDL for Table PMO_TIEMPO
CREATE TABLE PMO_TIEMPO 
   (	ID_TIEMPO INT PRIMARY KEY, 
	NOMBRE_TIEMPO VARCHAR(40), 
	ESTADO INT
   );
--  DDL for Table PMO_TIPO
CREATE TABLE PMO_TIPO
   (	ID_TIPO INT PRIMARY KEY, 
	NOMBRE_TIPO VARCHAR(50), 
	ESTADO INT, 
	PESO INT
   );
--  DDL for Table PMO_TIPO_PROYECTO_MIC
CREATE TABLE PMO_TIPO_PROYECTO_MIC
   (	ID_TIPO_PROYECTO_MIC INT PRIMARY KEY, 
	NOMBRE_TIPO_PROYECTO_MIC VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_VICEPRESIDENCIA
CREATE TABLE PMO_VICEPRESIDENCIA 
   (	ID_VICEPRESIDENCIA INT PRIMARY KEY, 
	NOMBRE_VICEPRESIDENCIA VARCHAR(50), 
	ESTADO INT
   );
--  DDL for Table PMO_TOTAL_PROYECTOS_BACKUP
CREATE TABLE PMO_TOTAL_PROYECTOS_BACKUP
   (	ID_PROYECTOS INT, 
	NO_REQ_PADRE VARCHAR(150), 
	NOMBRE_PROYECTO VARCHAR(250), 
	ID_VICEPRESIDENCIA INT, 
	ID_AREA INT, 
	ID_PM INT, 
	ID_TIPO INT, 
	NOMBRE_RESPONSABLE VARCHAR(30), 
	ID_ESTADO_PRIORIZACION INT, 
	IMPACTO_FINANCIERO INT, 
	FECHA_ESPERADA DATE, 
	ID_ESTADO_ALCANCE INT, 
	OBSERVACIONES VARCHAR(1000), 
	ID_ESTADO_IMPACTO_FINANCIERO INT, 
	ID_ESTADO_EXPERIENCIA INT, 
	ID_ESTADO_EFICIENCIA INT, 
	ID_ESTADO_INNOVACION INT, 
	ID_ESTADO_COMPLEJIDAD INT, 
	ID_TIPO_REQUERIMIENTO INT, 
	ID_ESTADO_REGULATORIO INT, 
	PUNTAJE_PRIORIZACION INT, 
	FECHA_INGRESO DATE, 
	FECHA_ACTUALIZACION DATE, 
	FECHA_PROGRAMACION DATE, 
	PRIORIZACION INT, 
	NUMERO_PRIORIZACION INT, 
	FECHA_PRIORIZACION DATE, 
	ID_TAREA INT, 
	ID_TIEMPO INT, 
	DIAS_RETRASO INT, 
	ID_OBJETIVO_ESTRATEGICO INT, 
	TRIMESTRE_ENTREGA VARCHAR(20), 
	OBSERVACION_GESTION VARCHAR(1000), 
	FECHA_CIERRE DATE, 
	FECHA_ACTUALIZACION_GESTION DATE, 
	DESCRIPCION_PROYECTO VARCHAR(1000), 
	FECHA_INICIO DATE, 
	FECHA_FIN DATE
   );
--  DDL for Table PT_CARGO
CREATE TABLE PT_CARGO 
   (	ID_CARGO INT PRIMARY KEY, 
	NN_NOMBRE_CARGO VARCHAR(55)
   );
--  DDL for Table PT_CENTRO
CREATE TABLE PT_CENTRO 
   (	ID_CENTRO VARCHAR(20) PRIMARY KEY, 
	NN_NOMBRE_CENTRO VARCHAR(65)
   );
--  DDL for Table PT_CIUDAD
CREATE TABLE PT_CIUDAD 
   (	ID_CIUDAD INT PRIMARY KEY, 
	NN_NOMBRE_CIUDAD VARCHAR(55), 
	PT_ZONA INT
   );
--  DDL for Table PT_COMPANIA
CREATE TABLE PT_COMPANIA
   (	NIT_COMPANIA bigint PRIMARY KEY, 
	NN_NOMBRE_COMPANIA VARCHAR(65)
   );
--  DDL for Table PT_CONTRATO
CREATE TABLE PT_CONTRATO 
   (	ID_CONTRATO INT(3) PRIMARY KEY, 
	NN_NOMBRE_CONTRATO VARCHAR(35)
   );
--  DDL for Table PT_CUENTA
CREATE TABLE PT_CUENTA 
   (	ID_CUENTA INT(3) PRIMARY KEY, 
	NN_NOMBRE_CUENTA VARCHAR(80)
   );
--  DDL for Table PT_DOCUMENTO
CREATE TABLE PT_DOCUMENTO 
   (	ID_DOCUMENTO INT(3) PRIMARY KEY, 
	NN_NOMBRE_DOCUMENTO VARCHAR(35)
   );
--  DDL for Table PT_NACIONALIDAD
CREATE TABLE PT_NACIONALIDAD
   (	ID_NACIONALIDAD INT(3) PRIMARY KEY, 
	NN_NOMBRE_NACIONALIDAD VARCHAR(35)
   );
--  DDL for Table PT_PERSONA
CREATE TABLE PT_PERSONA
   (	NN_NOMBRES_PERSONA VARCHAR(65), 
	USUARIO_PERSONA VARCHAR(65) PRIMARY KEY,
	PT_CUENTA INT(3), 
	MAIL_PERSONA VARCHAR(65),
	PT_CARGO INT, 
	PT_UNIDAD INT, 
	PT_COMPANIA bigint,
	PT_SEXO INT(2), 
	PMO_AREA INT, 
	PT_CIUDAD INT, 
	TT_TELEFONO_PERSONA VARCHAR(15), 
	PT_CENTRO VARCHAR(20)
   );
--  DDL for Table PT_REGIONAL
CREATE TABLE PT_REGIONAL 
   (	ID_REGIONAL INT PRIMARY KEY, 
	NN_NOMBRE_REGIONAL VARCHAR(35)
   );
--  DDL for Table PT_SEXO
CREATE TABLE PT_SEXO 
   (	ID_SEXO INT(2), 
	NN_NOMBRE_SEXO VARCHAR(15)
   );
--  DDL for Table PT_UNIDAD
CREATE TABLE PT_UNIDAD 
   (	ID_UNIDAD INT PRIMARY KEY, 
	NN_NOMBRE_UNIDAD VARCHAR(65)
   );
--  DDL for Table PT_UNIDADPT_CENTRO
CREATE TABLE PT_UNIDADPT_CENTRO
   (	PT_UNIDAD INT, 
	PT_CENTRO VARCHAR(20)
   );
--  DDL for Table PT_ZONA
CREATE TABLE PT_ZONA 
   (	ID_ZONA INT PRIMARY KEY, 
	NN_NOMBRE_ZONA VARCHAR(35), 
	PT_REGIONAL INT
   );
-- DDL for table PMO_TOTAL_PROYECTOS (tabla principal)
CREATE TABLE PMO_TOTAL_PROYECTOS (
	ID_PROYECTOS INT PRIMARY KEY, 
	NO_REQ_PADRE VARCHAR(150), 
	NOMBRE_PROYECTO VARCHAR(250), 
	ID_VICEPRESIDENCIA INT, 
	ID_AREA INT, 
	ID_PM INT, 
	ID_TIPO INT, 
	NOMBRE_RESPONSABLE VARCHAR(30), 
	ID_ESTADO_PRIORIZACION INT, 
	IMPACTO_FINANCIERO INT, 
	FECHA_ESPERADA DATE, 
	ID_ESTADO_ALCANCE INT, 
	OBSERVACIONES VARCHAR(1000), 
	ID_ESTADO_IMPACTO_FINANCIERO INT DEFAULT 1, 
	ID_ESTADO_EXPERIENCIA INT DEFAULT 1, 
	ID_ESTADO_EFICIENCIA INT DEFAULT 1, 
	ID_ESTADO_INNOVACION INT DEFAULT 1, 
	ID_ESTADO_COMPLEJIDAD INT DEFAULT 1, 
	ID_TIPO_REQUERIMIENTO INT, 
	ID_ESTADO_REGULATORIO INT, 
	PUNTAJE_PRIORIZACION INT, 
	FECHA_INGRESO DATE, 
	FECHA_ACTUALIZACION DATE, 
	FECHA_PROGRAMACION DATE, 
	PRIORIZACION INT, 
	NUMERO_PRIORIZACION INT, 
	FECHA_PRIORIZACION DATE, 
	ID_TAREA INT, 
	ID_TIEMPO INT, 
	DIAS_RETRASO INT, 
	ID_OBJETIVO_ESTRATEGICO INT, 
	TRIMESTRE_ENTREGA VARCHAR(20), 
	OBSERVACION_GESTION VARCHAR(4000) DEFAULT 'Sin Descripcion', 
	FECHA_CIERRE DATE, 
	FECHA_ACTUALIZACION_GESTION DATE, 
	DESCRIPCION_PROYECTO VARCHAR(1000) DEFAULT 'Sin Descripcion', 
	FECHA_INICIO DATE, 
	FECHA_FIN DATE, 
	ID_ESTADO_FUGA INT DEFAULT 0, 
	IMPACTO_FUGA INT DEFAULT 0, 
	ID_COMPLEJIDAD_PROYECTO INT DEFAULT 0, 
	ID_TIPO_PROYECTO_MIC INT DEFAULT 0, 
	FECHA_TAREA DATE, 
	FECHA_ULTIMA_TAREA DATE, 
	FECHA_PLANEADA DATE, 
	FECHA_FACTORY DATE, 
	FECHA_PROXIMA_PRIORIZACION DATE
);
-- DDL for view PMO_VIEW_TOTAL_PROYECTOS (vista principal)
CREATE VIEW 
 		PMO_VIEW_TOTAL_PROYECTOS 
			(
				ID_PROYECTOS,
				PRIORIZACION, 
				NUMERO_PRIORIZACION, 
				FECHA_PRIORIZACION, 
				NO_REQ_PADRE, 
				NOMBRE_PROYECTO, 
				NOMBRE_VICEPRESIDENCIA, 
				NOMBRE_AREA, 
				NOMBRE_PM, 
				AREA, 
				NOMBRE_TIPO, 
				NOMBRE_ESTADO_PRIORIZACION, 
				FECHA_PROGRAMACION, 
				NOMBRE_RESPONSABLE, 
				IMPACTO_FINANCIERO, 
				PUNTAJE_PRIORIZACION, 
				NOMBRE_ESTADO_ALCANCE, 
				NOMBRE_TAREA, 
				FASE, 
				NOMBRE_TIEMPO, 
				DIAS_RETRASO, 
				NOMBRE_OBJETIVO_ESTRATEGICO, 
				TRIMESTRE_ENTREGA, 
				OBSERVACION_GESTION, 
				DESCRIPCION_PROYECTO, 
				FECHA_INGRESO, 
				FECHA_ESPERADA, 
				AVANCE, 
				NOMBRE_COMPLEJIDAD, 
				NOMBRE_TIPO_PROYECTO_MIC, 
				VALOR, 
				FECHA_TAREA, 
				FECHA_ULTIMA_TAREA
			)
AS SELECT 
	tp.id_proyectos,
	tp.priorizacion,
	tp.numero_priorizacion,
	tp.fecha_priorizacion,
	tp.no_req_padre,
	tp.nombre_proyecto,
	v.nombre_vicepresidencia,
	a.nombre_area,
	pm.nombre_pm,
	pm.area,
	tip.nombre_tipo,
	p.nombre_estado_priorizacion,
	tp.fecha_programacion,
	tp.nombre_responsable,
	tp.impacto_financiero,
	tp.puntaje_priorizacion,
	al.nombre_estado_alcance,
	ta.nombre_tarea,
	ta.fase,
	tI.nombre_tiempo,
	TP.dias_retraso,
	ob.nombre_objetivo_estrategico,
	tp.trimestre_entrega,
	tp.observacion_gestion,
	tp.descripcion_proyecto,
	tp.fecha_ingreso,
	tp.fecha_esperada,
	ta.avance,
	co.nombre_complejidad,
	tmic.nombre_tipo_proyecto_mic,
	tra.valor,
	tp.fecha_tarea,
	tp.fecha_ultima_tarea
FROM
	pmo_total_proyectos tp, 
	pmo_area a, 
	pmo_pm pm,
	pmo_tipo tip,
	pmo_vicepresidencia v,
	pmo_estado_regulatorio reg,
	pmo_estado_priorizacion p,
	pmo_estado_alcance al,
	pmo_tiempo ti,
	pmo_Tareas ta,
	pmo_objetivos_estrategicos ob,
	pmo_complejidad co,
	pmo_tipo_proyecto_mic tmic,
	pmo_estimacion_trabajo tra
WHERE
	tp.id_area=a.id_area
	AND tp.id_pm=pm.id_pm
	AND tp.id_tipo=tip.id_tipo
	AND tp.id_vicepresidencia=v.id_vicepresidencia
	AND tp.id_estado_regulatorio =reg.id_estado_regulatorio
	AND tp.id_estado_priorizacion=p.id_estado_priorizacion
	AND tp.id_estado_alcance=al.id_estado_alcance
	AND tp.id_tarea=ta.id_tarea
	AND tp.id_tiempo=ti.id_tiempo
	AND tp.id_objetivo_estrategico=ob.id_objetivo_estrategico
	AND tp.id_complejidad_proyecto= co.id_complejidad
	AND tp.id_tipo_proyecto_mic=tmic.id_tipo_proyecto_mic
	AND tp.id_complejidad_proyecto= tra.id_complejidad
	AND tp.id_tipo_proyecto_mic= tra.id_tipo_proyecto_mic
	AND tp.id_tarea=tra.id_tarea
;
 

--  Ref Constraints for Table INT_INTERESADO
ALTER TABLE INT_INTERESADO ADD CONSTRAINT FK2_PMO_PROYECTO FOREIGN KEY (PMO_PROYECTO)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE;
ALTER TABLE INT_INTERESADO ADD CONSTRAINT FK2_PT_PERSONA FOREIGN KEY (PT_PERSONA)
	  REFERENCES PT_PERSONA (USUARIO_PERSONA) ON DELETE CASCADE;
ALTER TABLE INT_INTERESADO ADD CONSTRAINT FK_INT_INFLUENCIA FOREIGN KEY (INT_INFLUENCIA)
	  REFERENCES INT_INFLUENCIA (ID_INFLUENCIA) ON DELETE CASCADE;
ALTER TABLE INT_INTERESADO ADD CONSTRAINT FK_INT_ROL FOREIGN KEY (INT_ROL)
	  REFERENCES INT_ROL (ID_ROL) ON DELETE CASCADE;
--  Ref Constraints for Table LA_LECCION
ALTER TABLE LA_LECCION ADD CONSTRAINT FK_LA_VALOR FOREIGN KEY (LA_VALOR)
	  REFERENCES LA_VALOR (ID_VALOR) ON DELETE CASCADE;
ALTER TABLE LA_LECCION ADD CONSTRAINT FK_PMO_AREA FOREIGN KEY (PMO_AREA)
	  REFERENCES PMO_AREA (ID_AREA) ON DELETE CASCADE;
ALTER TABLE LA_LECCION ADD CONSTRAINT FK_PMO_PROYECTO FOREIGN KEY (PMO_PROYECTO)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE;
--  Ref Constraints for Table PMO_GESTION_DEMANDA
ALTER TABLE PMO_GESTION_DEMANDA ADD CONSTRAINT PMO_GESTION_DEMANDA_PMO_T_FK1 FOREIGN KEY (ID_PROYECTO)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE;
--  Ref Constraints for Table PMO_GESTION_DOCUMENTACION
ALTER TABLE PMO_GESTION_DOCUMENTACION ADD CONSTRAINT PMO_GESTION_DOCUMENTACION_FK1 FOREIGN KEY (ID_DOCUMENTACION_PROYECTO)
	  REFERENCES PMO_DOCUMENTACION_PROYECTO (ID_DOCUMENTACION_PROYECTO) ON DELETE CASCADE;
ALTER TABLE PMO_GESTION_DOCUMENTACION ADD CONSTRAINT PMO_GESTION_DOCUMENTACION_FK2 FOREIGN KEY (ID_PROYECTOS)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE;
ALTER TABLE PMO_GESTION_DOCUMENTACION ADD CONSTRAINT PMO_GESTION_DOCUMENTACION_FK3 FOREIGN KEY (ID_PM)
	  REFERENCES PMO_PM (ID_PM) ON DELETE CASCADE;
--  Ref Constraints for Table PMO_TOTAL_PROYECTOS
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_COMPLEJIDAD_FK1 FOREIGN KEY (ID_COMPLEJIDAD_PROYECTO)
	  REFERENCES PMO_COMPLEJIDAD (ID_COMPLEJIDAD) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TIPO_PRO_MIC_FK1 FOREIGN KEY (ID_TIPO_PROYECTO_MIC)
	  REFERENCES PMO_TIPO_PROYECTO_MIC (ID_TIPO_PROYECTO_MIC) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_ALCAN_FK1 FOREIGN KEY (ID_ESTADO_ALCANCE)
	  REFERENCES PMO_ESTADO_ALCANCE (ID_ESTADO_ALCANCE) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_AREA_FK1 FOREIGN KEY (ID_AREA)
	  REFERENCES PMO_AREA (ID_AREA) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_COMP_FK1 FOREIGN KEY (ID_ESTADO_COMPLEJIDAD)
	  REFERENCES PMO_ESTADO_VARIABLES (ID_ESTADO_VARIABLES) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_EFI_FK1 FOREIGN KEY (ID_ESTADO_EFICIENCIA)
	  REFERENCES PMO_ESTADO_VARIABLES (ID_ESTADO_VARIABLES) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_EXP_FK1 FOREIGN KEY (ID_ESTADO_EXPERIENCIA)
	  REFERENCES PMO_ESTADO_VARIABLES (ID_ESTADO_VARIABLES) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_FIN_FK1 FOREIGN KEY (ID_ESTADO_IMPACTO_FINANCIERO)
	  REFERENCES PMO_ESTADO_VARIABLES (ID_ESTADO_VARIABLES) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_INN_FK1 FOREIGN KEY (ID_ESTADO_INNOVACION)
	  REFERENCES PMO_ESTADO_VARIABLES (ID_ESTADO_VARIABLES) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_OBJ_FK1 FOREIGN KEY (ID_OBJETIVO_ESTRATEGICO)
	  REFERENCES PMO_OBJETIVOS_ESTRATEGICOS (ID_OBJETIVO_ESTRATEGICO) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_PM_FK1 FOREIGN KEY (ID_PM)
	  REFERENCES PMO_PM (ID_PM) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_PRIO_FK1 FOREIGN KEY (ID_ESTADO_PRIORIZACION)
	  REFERENCES PMO_ESTADO_PRIORIZACION (ID_ESTADO_PRIORIZACION) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_REG_FK1 FOREIGN KEY (ID_ESTADO_REGULATORIO)
	  REFERENCES PMO_ESTADO_REGULATORIO (ID_ESTADO_REGULATORIO) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_TAREA_FK1 FOREIGN KEY (ID_TAREA)
	  REFERENCES PMO_TAREAS (ID_TAREA) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_TIEMPO_FK1 FOREIGN KEY (ID_TIEMPO)
	  REFERENCES PMO_TIEMPO (ID_TIEMPO) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_TIPO_FK1 FOREIGN KEY (ID_TIPO)
	  REFERENCES PMO_TIPO (ID_TIPO) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_TIP_FK1 FOREIGN KEY (ID_TIPO_REQUERIMIENTO)
	  REFERENCES PMO_TIPO (ID_TIPO) ON DELETE CASCADE;
ALTER TABLE PMO_TOTAL_PROYECTOS ADD CONSTRAINT PMO_TP_VICE_FK1 FOREIGN KEY (ID_VICEPRESIDENCIA)
	  REFERENCES PMO_VICEPRESIDENCIA (ID_VICEPRESIDENCIA) ON DELETE CASCADE;
--  Ref Constraints for Table PT_CIUDAD
ALTER TABLE PT_CIUDAD ADD CONSTRAINT FK_PT_ZONA FOREIGN KEY (PT_ZONA)
	  REFERENCES PT_ZONA (ID_ZONA) ON DELETE CASCADE;
--  Ref Constraints for Table PT_PERSONA
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK1_PT_CENTRO FOREIGN KEY (PT_CENTRO)
	  REFERENCES PT_CENTRO (ID_CENTRO) ON DELETE CASCADE;
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK_PMO1_AREA FOREIGN KEY (PMO_AREA)
	  REFERENCES PMO_AREA (ID_AREA) ON DELETE CASCADE;
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK_PT_CARGO FOREIGN KEY (PT_CARGO)
	  REFERENCES PT_CARGO (ID_CARGO) ON DELETE CASCADE;
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK_PT_CIUDAD FOREIGN KEY (PT_CIUDAD)
	  REFERENCES PT_CIUDAD (ID_CIUDAD) ON DELETE CASCADE;
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK_PT_COMPANIA FOREIGN KEY (PT_COMPANIA)
	  REFERENCES PT_COMPANIA (NIT_COMPANIA) ON DELETE CASCADE;
ALTER TABLE PT_PERSONA ADD CONSTRAINT FK_PT_CUENTA FOREIGN KEY (PT_CUENTA)
	  REFERENCES PT_CUENTA (ID_CUENTA) ON DELETE CASCADE;
--  Ref Constraints for Table PT_UNIDADPT_CENTRO
ALTER TABLE PT_UNIDADPT_CENTRO ADD CONSTRAINT FK_PT_CENTRO2 FOREIGN KEY (PT_CENTRO)
	  REFERENCES PT_CENTRO (ID_CENTRO) ON DELETE CASCADE;
ALTER TABLE PT_UNIDADPT_CENTRO ADD CONSTRAINT FK_PT_UNIDAD2 FOREIGN KEY (PT_UNIDAD)
	  REFERENCES PT_UNIDAD (ID_UNIDAD) ON DELETE CASCADE;
--  Ref Constraints for Table PT_ZONA
ALTER TABLE PT_ZONA ADD CONSTRAINT FK_PT_REGIONAL FOREIGN KEY (PT_REGIONAL)
	  REFERENCES PT_REGIONAL (ID_REGIONAL) ON DELETE CASCADE;

CREATE TABLE PMO_CAPACIDAD 
   (	ID_PROYECTOS INT, 
	ID_PM INT, 
	NOMBRE_PM VARCHAR(200), 
	ID_TAREA INT, 
	NOMBRE_TAREA VARCHAR(200), 
	ID_COMPLEJIDAD_PROYECTO INT, 
	NOMBRE_COMPLEJIDAD VARCHAR(200), 
	ID_TIPO_PROYECTO_MIC INT, 
	NOMBRE_TIPO_PROYECTO_MIC VARCHAR(200), 
	VALOR_ACTUAL INT, 
	VALOR_FUTURO INT, 
	VALOR_ACTUAL_PONDERADO INT, 
	VALOR_FUTURO_PONDERADO INT, 
	VALOR_TOTAL INT
   );

--  Ref Constraints for Table PMO_CAPACIDAD
ALTER TABLE PMO_CAPACIDAD ADD CONSTRAINT FK_PMO_TOTAL_PROYECTOS FOREIGN KEY (ID_PROYECTOS)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE;
ALTER TABLE PMO_CAPACIDAD ADD CONSTRAINT FK_PMO_PM FOREIGN KEY (ID_PM)
	  REFERENCES PMO_PM (ID_PM) ON DELETE CASCADE;
ALTER TABLE PMO_CAPACIDAD ADD CONSTRAINT FK_PMO_TAREAS FOREIGN KEY (ID_TAREA)
	  REFERENCES PMO_TAREAS (ID_TAREA) ON DELETE CASCADE;  
ALTER TABLE PMO_CAPACIDAD ADD CONSTRAINT FK_PMO_COMPLEJIDAD FOREIGN KEY (ID_COMPLEJIDAD_PROYECTO)
	  REFERENCES PMO_COMPLEJIDAD (ID_COMPLEJIDAD) ON DELETE CASCADE;  
ALTER TABLE PMO_CAPACIDAD ADD CONSTRAINT FK_PMO_TIPO_PROYECTO_MIC FOREIGN KEY (ID_TIPO_PROYECTO_MIC)
	  REFERENCES PMO_TIPO_PROYECTO_MIC (ID_TIPO_PROYECTO_MIC) ON DELETE CASCADE;

-- DDL for table PMIS_PRIVILEGES
CREATE TABLE PMIS_PRIVILEGES (
	ID_PRIVILEGES INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NN_NOMBRE_PRIVILEGES VARCHAR (20),
	YN_ESTADO_PRIVILEGES INT
);
-- DDL for table PMIS_USER
CREATE TABLE PMIS_USER (
	ID_USER INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PT_PERSONA VARCHAR (65) NOT NULL,
	PMIS_PRIVILEGES INT NOT NULL,
	PS_CLAVE_USER VARCHAR (2000) NOT NULL
);
-- DDL for table PMO_STATUS_PROYECTOS
CREATE TABLE PMO_STATUS_PROYECTOS (
	ID_STATUS_PROYECTOS INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PMO_PROYECTO INT NOT NULL,
	SOFT_LAUNCH DATE,
	COMMERCIAL_LAUNCH DATE,
	FECHA_ACTUALIZACION DATE NOT NULL,
	ACTIVIDADES VARCHAR (500),
	LOGROS VARCHAR (350),
	RIESGOS VARCHAR (350),
	OBSERVACIONES VARCHAR (300),
	RETRASOS_RESPONSABLES VARCHAR (300),
	USUARIO_PERSONA VARCHAR (65)  NOT NULL,
	PORCENTAJE INT,
	TAREA VARCHAR (65),
	TIEMPO VARCHAR (65),
	 CONSTRAINT PMO__PROYECTO__FK1 FOREIGN KEY (PMO_PROYECTO)
	  REFERENCES PMO_TOTAL_PROYECTOS (ID_PROYECTOS) ON DELETE CASCADE, 
	 CONSTRAINT PT_PERSONA_FK1 FOREIGN KEY (USUARIO_PERSONA)
	  REFERENCES PT_PERSONA (USUARIO_PERSONA) ON DELETE CASCADE
);
-- DDL for table PMO_STATUS_PROYECTOS_TEMP
CREATE TABLE PMO_STATUS_PROYECTOS_TEMP (
	ID_STATUS_PROYECTOS INT,
	PMO_PROYECTO INT,
	SOFT_LAUNCH DATE,
	COMMERCIAL_LAUNCH DATE,
	FECHA_ACTUALIZACION DATE,
	ACTIVIDADES VARCHAR (500),
	LOGROS VARCHAR (350),
	RIESGOS VARCHAR (350),
	OBSERVACIONES VARCHAR (300),
	RETRASOS_RESPONSABLES VARCHAR (300),
	USUARIO_PERSONA VARCHAR (65),
	PORCENTAJE INT,
	TAREA VARCHAR (65),
	TIEMPO VARCHAR (65)
);